// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dht.proto

package dht.pb;

public final class Dht {
  private Dht() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:dht.pb.Message)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * defines what type of message it is.
     * </pre>
     *
     * <code>.dht.pb.Message.MessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * defines what type of message it is.
     * </pre>
     *
     * <code>.dht.pb.Message.MessageType type = 1;</code>
     * @return The type.
     */
    Message.MessageType getType();

    /**
     * <pre>
     * defines what coral cluster level this query/response belongs to.
     * in case we want to implement coral's cluster rings in the future.
     * </pre>
     *
     * <code>int32 clusterLevelRaw = 10;</code>
     * @return The clusterLevelRaw.
     */
    int getClusterLevelRaw();

    /**
     * <pre>
     * Used to specify the key associated with this message.
     * PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>bytes key = 2;</code>
     * @return The key.
     */
    com.google.protobuf.ByteString getKey();

    /**
     * <pre>
     * Used to return a value
     * PUT_VALUE, GET_VALUE
     * </pre>
     *
     * <code>.record.pb.Record record = 3;</code>
     * @return Whether the record field is set.
     */
    boolean hasRecord();
    /**
     * <pre>
     * Used to return a value
     * PUT_VALUE, GET_VALUE
     * </pre>
     *
     * <code>.record.pb.Record record = 3;</code>
     * @return The record.
     */
    record.pb.RecordOuterClass.Record getRecord();
    /**
     * <pre>
     * Used to return a value
     * PUT_VALUE, GET_VALUE
     * </pre>
     *
     * <code>.record.pb.Record record = 3;</code>
     */
    record.pb.RecordOuterClass.RecordOrBuilder getRecordOrBuilder();

    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    java.util.List<Message.Peer>
        getCloserPeersList();
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    Message.Peer getCloserPeers(int index);
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    int getCloserPeersCount();
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    java.util.List<? extends Message.PeerOrBuilder>
        getCloserPeersOrBuilderList();
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    Message.PeerOrBuilder getCloserPeersOrBuilder(
        int index);

    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    java.util.List<Message.Peer>
        getProviderPeersList();
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    Message.Peer getProviderPeers(int index);
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    int getProviderPeersCount();
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    java.util.List<? extends Message.PeerOrBuilder>
        getProviderPeersOrBuilderList();
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    Message.PeerOrBuilder getProviderPeersOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code dht.pb.Message}
   */
  public static final class Message extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:dht.pb.Message)
      MessageOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use Message.newBuilder() to construct.
    private Message(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private Message() {
      type_ = 0;
      key_ = com.google.protobuf.ByteString.EMPTY;
      closerPeers_ = java.util.Collections.emptyList();
      providerPeers_ = java.util.Collections.emptyList();
    }

    @Override
    @SuppressWarnings({"unused"})
    protected Object newInstance(
        UnusedPrivateParameter unused) {
      return new Message();
    }

    @Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private Message(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 8: {
              int rawValue = input.readEnum();

              type_ = rawValue;
              break;
            }
            case 18: {

              key_ = input.readBytes();
              break;
            }
            case 26: {
              record.pb.RecordOuterClass.Record.Builder subBuilder = null;
              if (record_ != null) {
                subBuilder = record_.toBuilder();
              }
              record_ = input.readMessage(record.pb.RecordOuterClass.Record.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(record_);
                record_ = subBuilder.buildPartial();
              }

              break;
            }
            case 66: {
              if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                closerPeers_ = new java.util.ArrayList<Peer>();
                mutable_bitField0_ |= 0x00000001;
              }
              closerPeers_.add(
                  input.readMessage(Peer.parser(), extensionRegistry));
              break;
            }
            case 74: {
              if (!((mutable_bitField0_ & 0x00000002) != 0)) {
                providerPeers_ = new java.util.ArrayList<Peer>();
                mutable_bitField0_ |= 0x00000002;
              }
              providerPeers_.add(
                  input.readMessage(Peer.parser(), extensionRegistry));
              break;
            }
            case 80: {

              clusterLevelRaw_ = input.readInt32();
              break;
            }
            default: {
              if (!parseUnknownField(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) != 0)) {
          closerPeers_ = java.util.Collections.unmodifiableList(closerPeers_);
        }
        if (((mutable_bitField0_ & 0x00000002) != 0)) {
          providerPeers_ = java.util.Collections.unmodifiableList(providerPeers_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Dht.internal_static_dht_pb_Message_descriptor;
    }

    @Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Dht.internal_static_dht_pb_Message_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              Message.class, Builder.class);
    }

    /**
     * Protobuf enum {@code dht.pb.Message.MessageType}
     */
    public enum MessageType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PUT_VALUE = 0;</code>
       */
      PUT_VALUE(0),
      /**
       * <code>GET_VALUE = 1;</code>
       */
      GET_VALUE(1),
      /**
       * <code>ADD_PROVIDER = 2;</code>
       */
      ADD_PROVIDER(2),
      /**
       * <code>GET_PROVIDERS = 3;</code>
       */
      GET_PROVIDERS(3),
      /**
       * <code>FIND_NODE = 4;</code>
       */
      FIND_NODE(4),
      /**
       * <code>PING = 5;</code>
       */
      PING(5),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PUT_VALUE = 0;</code>
       */
      public static final int PUT_VALUE_VALUE = 0;
      /**
       * <code>GET_VALUE = 1;</code>
       */
      public static final int GET_VALUE_VALUE = 1;
      /**
       * <code>ADD_PROVIDER = 2;</code>
       */
      public static final int ADD_PROVIDER_VALUE = 2;
      /**
       * <code>GET_PROVIDERS = 3;</code>
       */
      public static final int GET_PROVIDERS_VALUE = 3;
      /**
       * <code>FIND_NODE = 4;</code>
       */
      public static final int FIND_NODE_VALUE = 4;
      /**
       * <code>PING = 5;</code>
       */
      public static final int PING_VALUE = 5;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static MessageType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MessageType forNumber(int value) {
        switch (value) {
          case 0: return PUT_VALUE;
          case 1: return GET_VALUE;
          case 2: return ADD_PROVIDER;
          case 3: return GET_PROVIDERS;
          case 4: return FIND_NODE;
          case 5: return PING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MessageType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MessageType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MessageType>() {
              public MessageType findValueByNumber(int number) {
                return MessageType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Message.getDescriptor().getEnumTypes().get(0);
      }

      private static final MessageType[] VALUES = values();

      public static MessageType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MessageType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:dht.pb.Message.MessageType)
    }

    /**
     * Protobuf enum {@code dht.pb.Message.ConnectionType}
     */
    public enum ConnectionType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * sender does not have a connection to peer, and no extra information (default)
       * </pre>
       *
       * <code>NOT_CONNECTED = 0;</code>
       */
      NOT_CONNECTED(0),
      /**
       * <pre>
       * sender has a live connection to peer
       * </pre>
       *
       * <code>CONNECTED = 1;</code>
       */
      CONNECTED(1),
      /**
       * <pre>
       * sender recently connected to peer
       * </pre>
       *
       * <code>CAN_CONNECT = 2;</code>
       */
      CAN_CONNECT(2),
      /**
       * <pre>
       * sender recently tried to connect to peer repeatedly but failed to connect
       * ("try" here is loose, but this should signal "made strong effort, failed")
       * </pre>
       *
       * <code>CANNOT_CONNECT = 3;</code>
       */
      CANNOT_CONNECT(3),
      UNRECOGNIZED(-1),
      ;

      /**
       * <pre>
       * sender does not have a connection to peer, and no extra information (default)
       * </pre>
       *
       * <code>NOT_CONNECTED = 0;</code>
       */
      public static final int NOT_CONNECTED_VALUE = 0;
      /**
       * <pre>
       * sender has a live connection to peer
       * </pre>
       *
       * <code>CONNECTED = 1;</code>
       */
      public static final int CONNECTED_VALUE = 1;
      /**
       * <pre>
       * sender recently connected to peer
       * </pre>
       *
       * <code>CAN_CONNECT = 2;</code>
       */
      public static final int CAN_CONNECT_VALUE = 2;
      /**
       * <pre>
       * sender recently tried to connect to peer repeatedly but failed to connect
       * ("try" here is loose, but this should signal "made strong effort, failed")
       * </pre>
       *
       * <code>CANNOT_CONNECT = 3;</code>
       */
      public static final int CANNOT_CONNECT_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @Deprecated
      public static ConnectionType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static ConnectionType forNumber(int value) {
        switch (value) {
          case 0: return NOT_CONNECTED;
          case 1: return CONNECTED;
          case 2: return CAN_CONNECT;
          case 3: return CANNOT_CONNECT;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<ConnectionType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          ConnectionType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ConnectionType>() {
              public ConnectionType findValueByNumber(int number) {
                return ConnectionType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return Message.getDescriptor().getEnumTypes().get(1);
      }

      private static final ConnectionType[] VALUES = values();

      public static ConnectionType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private ConnectionType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:dht.pb.Message.ConnectionType)
    }

    public interface PeerOrBuilder extends
        // @@protoc_insertion_point(interface_extends:dht.pb.Message.Peer)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * ID of a given peer.
       * </pre>
       *
       * <code>bytes id = 1;</code>
       * @return The id.
       */
      com.google.protobuf.ByteString getId();

      /**
       * <pre>
       * multiaddrs for a given peer
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return A list containing the addrs.
       */
      java.util.List<com.google.protobuf.ByteString> getAddrsList();
      /**
       * <pre>
       * multiaddrs for a given peer
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return The count of addrs.
       */
      int getAddrsCount();
      /**
       * <pre>
       * multiaddrs for a given peer
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @param index The index of the element to return.
       * @return The addrs at the given index.
       */
      com.google.protobuf.ByteString getAddrs(int index);

      /**
       * <pre>
       * used to signal the sender's connection capabilities to the peer
       * </pre>
       *
       * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
       * @return The enum numeric value on the wire for connection.
       */
      int getConnectionValue();
      /**
       * <pre>
       * used to signal the sender's connection capabilities to the peer
       * </pre>
       *
       * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
       * @return The connection.
       */
      ConnectionType getConnection();
    }
    /**
     * Protobuf type {@code dht.pb.Message.Peer}
     */
    public static final class Peer extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:dht.pb.Message.Peer)
        PeerOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Peer.newBuilder() to construct.
      private Peer(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Peer() {
        id_ = com.google.protobuf.ByteString.EMPTY;
        addrs_ = java.util.Collections.emptyList();
        connection_ = 0;
      }

      @Override
      @SuppressWarnings({"unused"})
      protected Object newInstance(
          UnusedPrivateParameter unused) {
        return new Peer();
      }

      @Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Peer(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {

                id_ = input.readBytes();
                break;
              }
              case 18: {
                if (!((mutable_bitField0_ & 0x00000001) != 0)) {
                  addrs_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
                  mutable_bitField0_ |= 0x00000001;
                }
                addrs_.add(input.readBytes());
                break;
              }
              case 24: {
                int rawValue = input.readEnum();

                connection_ = rawValue;
                break;
              }
              default: {
                if (!parseUnknownField(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000001) != 0)) {
            addrs_ = java.util.Collections.unmodifiableList(addrs_); // C
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dht.internal_static_dht_pb_Message_Peer_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dht.internal_static_dht_pb_Message_Peer_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Peer.class, Builder.class);
      }

      public static final int ID_FIELD_NUMBER = 1;
      private com.google.protobuf.ByteString id_;
      /**
       * <pre>
       * ID of a given peer.
       * </pre>
       *
       * <code>bytes id = 1;</code>
       * @return The id.
       */
      @Override
      public com.google.protobuf.ByteString getId() {
        return id_;
      }

      public static final int ADDRS_FIELD_NUMBER = 2;
      private java.util.List<com.google.protobuf.ByteString> addrs_;
      /**
       * <pre>
       * multiaddrs for a given peer
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return A list containing the addrs.
       */
      @Override
      public java.util.List<com.google.protobuf.ByteString>
          getAddrsList() {
        return addrs_;
      }
      /**
       * <pre>
       * multiaddrs for a given peer
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @return The count of addrs.
       */
      public int getAddrsCount() {
        return addrs_.size();
      }
      /**
       * <pre>
       * multiaddrs for a given peer
       * </pre>
       *
       * <code>repeated bytes addrs = 2;</code>
       * @param index The index of the element to return.
       * @return The addrs at the given index.
       */
      public com.google.protobuf.ByteString getAddrs(int index) {
        return addrs_.get(index);
      }

      public static final int CONNECTION_FIELD_NUMBER = 3;
      private int connection_;
      /**
       * <pre>
       * used to signal the sender's connection capabilities to the peer
       * </pre>
       *
       * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
       * @return The enum numeric value on the wire for connection.
       */
      @Override public int getConnectionValue() {
        return connection_;
      }
      /**
       * <pre>
       * used to signal the sender's connection capabilities to the peer
       * </pre>
       *
       * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
       * @return The connection.
       */
      @Override public ConnectionType getConnection() {
        @SuppressWarnings("deprecation")
        ConnectionType result = ConnectionType.valueOf(connection_);
        return result == null ? ConnectionType.UNRECOGNIZED : result;
      }

      private byte memoizedIsInitialized = -1;
      @Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (!id_.isEmpty()) {
          output.writeBytes(1, id_);
        }
        for (int i = 0; i < addrs_.size(); i++) {
          output.writeBytes(2, addrs_.get(i));
        }
        if (connection_ != ConnectionType.NOT_CONNECTED.getNumber()) {
          output.writeEnum(3, connection_);
        }
        unknownFields.writeTo(output);
      }

      @Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (!id_.isEmpty()) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(1, id_);
        }
        {
          int dataSize = 0;
          for (int i = 0; i < addrs_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeBytesSizeNoTag(addrs_.get(i));
          }
          size += dataSize;
          size += 1 * getAddrsList().size();
        }
        if (connection_ != ConnectionType.NOT_CONNECTED.getNumber()) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(3, connection_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @Override
      public boolean equals(final Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof Peer)) {
          return super.equals(obj);
        }
        Peer other = (Peer) obj;

        if (!getId()
            .equals(other.getId())) return false;
        if (!getAddrsList()
            .equals(other.getAddrsList())) return false;
        if (connection_ != other.connection_) return false;
        if (!unknownFields.equals(other.unknownFields)) return false;
        return true;
      }

      @Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + ID_FIELD_NUMBER;
        hash = (53 * hash) + getId().hashCode();
        if (getAddrsCount() > 0) {
          hash = (37 * hash) + ADDRS_FIELD_NUMBER;
          hash = (53 * hash) + getAddrsList().hashCode();
        }
        hash = (37 * hash) + CONNECTION_FIELD_NUMBER;
        hash = (53 * hash) + connection_;
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static Peer parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Peer parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Peer parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Peer parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Peer parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static Peer parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static Peer parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Peer parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static Peer parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static Peer parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static Peer parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static Peer parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(Peer prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code dht.pb.Message.Peer}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:dht.pb.Message.Peer)
          PeerOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return Dht.internal_static_dht_pb_Message_Peer_descriptor;
        }

        @Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return Dht.internal_static_dht_pb_Message_Peer_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  Peer.class, Builder.class);
        }

        // Construct using dht.pb.Dht.Message.Peer.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @Override
        public Builder clear() {
          super.clear();
          id_ = com.google.protobuf.ByteString.EMPTY;

          addrs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          connection_ = 0;

          return this;
        }

        @Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return Dht.internal_static_dht_pb_Message_Peer_descriptor;
        }

        @Override
        public Peer getDefaultInstanceForType() {
          return Peer.getDefaultInstance();
        }

        @Override
        public Peer build() {
          Peer result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @Override
        public Peer buildPartial() {
          Peer result = new Peer(this);
          int from_bitField0_ = bitField0_;
          result.id_ = id_;
          if (((bitField0_ & 0x00000001) != 0)) {
            addrs_ = java.util.Collections.unmodifiableList(addrs_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.addrs_ = addrs_;
          result.connection_ = connection_;
          onBuilt();
          return result;
        }

        @Override
        public Builder clone() {
          return super.clone();
        }
        @Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.setField(field, value);
        }
        @Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            Object value) {
          return super.addRepeatedField(field, value);
        }
        @Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof Peer) {
            return mergeFrom((Peer)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(Peer other) {
          if (other == Peer.getDefaultInstance()) return this;
          if (other.getId() != com.google.protobuf.ByteString.EMPTY) {
            setId(other.getId());
          }
          if (!other.addrs_.isEmpty()) {
            if (addrs_.isEmpty()) {
              addrs_ = other.addrs_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureAddrsIsMutable();
              addrs_.addAll(other.addrs_);
            }
            onChanged();
          }
          if (other.connection_ != 0) {
            setConnectionValue(other.getConnectionValue());
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @Override
        public final boolean isInitialized() {
          return true;
        }

        @Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          Peer parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (Peer) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.ByteString id_ = com.google.protobuf.ByteString.EMPTY;
        /**
         * <pre>
         * ID of a given peer.
         * </pre>
         *
         * <code>bytes id = 1;</code>
         * @return The id.
         */
        @Override
        public com.google.protobuf.ByteString getId() {
          return id_;
        }
        /**
         * <pre>
         * ID of a given peer.
         * </pre>
         *
         * <code>bytes id = 1;</code>
         * @param value The id to set.
         * @return This builder for chaining.
         */
        public Builder setId(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  
          id_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * ID of a given peer.
         * </pre>
         *
         * <code>bytes id = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearId() {
          
          id_ = getDefaultInstance().getId();
          onChanged();
          return this;
        }

        private java.util.List<com.google.protobuf.ByteString> addrs_ = java.util.Collections.emptyList();
        private void ensureAddrsIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            addrs_ = new java.util.ArrayList<com.google.protobuf.ByteString>(addrs_);
            bitField0_ |= 0x00000001;
           }
        }
        /**
         * <pre>
         * multiaddrs for a given peer
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @return A list containing the addrs.
         */
        public java.util.List<com.google.protobuf.ByteString>
            getAddrsList() {
          return ((bitField0_ & 0x00000001) != 0) ?
                   java.util.Collections.unmodifiableList(addrs_) : addrs_;
        }
        /**
         * <pre>
         * multiaddrs for a given peer
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @return The count of addrs.
         */
        public int getAddrsCount() {
          return addrs_.size();
        }
        /**
         * <pre>
         * multiaddrs for a given peer
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param index The index of the element to return.
         * @return The addrs at the given index.
         */
        public com.google.protobuf.ByteString getAddrs(int index) {
          return addrs_.get(index);
        }
        /**
         * <pre>
         * multiaddrs for a given peer
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param index The index to set the value at.
         * @param value The addrs to set.
         * @return This builder for chaining.
         */
        public Builder setAddrs(
            int index, com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureAddrsIsMutable();
          addrs_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * multiaddrs for a given peer
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param value The addrs to add.
         * @return This builder for chaining.
         */
        public Builder addAddrs(com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  ensureAddrsIsMutable();
          addrs_.add(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * multiaddrs for a given peer
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @param values The addrs to add.
         * @return This builder for chaining.
         */
        public Builder addAllAddrs(
            Iterable<? extends com.google.protobuf.ByteString> values) {
          ensureAddrsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, addrs_);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * multiaddrs for a given peer
         * </pre>
         *
         * <code>repeated bytes addrs = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearAddrs() {
          addrs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }

        private int connection_ = 0;
        /**
         * <pre>
         * used to signal the sender's connection capabilities to the peer
         * </pre>
         *
         * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
         * @return The enum numeric value on the wire for connection.
         */
        @Override public int getConnectionValue() {
          return connection_;
        }
        /**
         * <pre>
         * used to signal the sender's connection capabilities to the peer
         * </pre>
         *
         * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
         * @param value The enum numeric value on the wire for connection to set.
         * @return This builder for chaining.
         */
        public Builder setConnectionValue(int value) {
          
          connection_ = value;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * used to signal the sender's connection capabilities to the peer
         * </pre>
         *
         * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
         * @return The connection.
         */
        @Override
        public ConnectionType getConnection() {
          @SuppressWarnings("deprecation")
          ConnectionType result = ConnectionType.valueOf(connection_);
          return result == null ? ConnectionType.UNRECOGNIZED : result;
        }
        /**
         * <pre>
         * used to signal the sender's connection capabilities to the peer
         * </pre>
         *
         * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
         * @param value The connection to set.
         * @return This builder for chaining.
         */
        public Builder setConnection(ConnectionType value) {
          if (value == null) {
            throw new NullPointerException();
          }
          
          connection_ = value.getNumber();
          onChanged();
          return this;
        }
        /**
         * <pre>
         * used to signal the sender's connection capabilities to the peer
         * </pre>
         *
         * <code>.dht.pb.Message.ConnectionType connection = 3;</code>
         * @return This builder for chaining.
         */
        public Builder clearConnection() {
          
          connection_ = 0;
          onChanged();
          return this;
        }
        @Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:dht.pb.Message.Peer)
      }

      // @@protoc_insertion_point(class_scope:dht.pb.Message.Peer)
      private static final Peer DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new Peer();
      }

      public static Peer getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Peer>
          PARSER = new com.google.protobuf.AbstractParser<Peer>() {
        @Override
        public Peer parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Peer(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Peer> parser() {
        return PARSER;
      }

      @Override
      public com.google.protobuf.Parser<Peer> getParserForType() {
        return PARSER;
      }

      @Override
      public Peer getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int TYPE_FIELD_NUMBER = 1;
    private int type_;
    /**
     * <pre>
     * defines what type of message it is.
     * </pre>
     *
     * <code>.dht.pb.Message.MessageType type = 1;</code>
     * @return The enum numeric value on the wire for type.
     */
    @Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * defines what type of message it is.
     * </pre>
     *
     * <code>.dht.pb.Message.MessageType type = 1;</code>
     * @return The type.
     */
    @Override public MessageType getType() {
      @SuppressWarnings("deprecation")
      MessageType result = MessageType.valueOf(type_);
      return result == null ? MessageType.UNRECOGNIZED : result;
    }

    public static final int CLUSTERLEVELRAW_FIELD_NUMBER = 10;
    private int clusterLevelRaw_;
    /**
     * <pre>
     * defines what coral cluster level this query/response belongs to.
     * in case we want to implement coral's cluster rings in the future.
     * </pre>
     *
     * <code>int32 clusterLevelRaw = 10;</code>
     * @return The clusterLevelRaw.
     */
    @Override
    public int getClusterLevelRaw() {
      return clusterLevelRaw_;
    }

    public static final int KEY_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString key_;
    /**
     * <pre>
     * Used to specify the key associated with this message.
     * PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>bytes key = 2;</code>
     * @return The key.
     */
    @Override
    public com.google.protobuf.ByteString getKey() {
      return key_;
    }

    public static final int RECORD_FIELD_NUMBER = 3;
    private record.pb.RecordOuterClass.Record record_;
    /**
     * <pre>
     * Used to return a value
     * PUT_VALUE, GET_VALUE
     * </pre>
     *
     * <code>.record.pb.Record record = 3;</code>
     * @return Whether the record field is set.
     */
    @Override
    public boolean hasRecord() {
      return record_ != null;
    }
    /**
     * <pre>
     * Used to return a value
     * PUT_VALUE, GET_VALUE
     * </pre>
     *
     * <code>.record.pb.Record record = 3;</code>
     * @return The record.
     */
    @Override
    public record.pb.RecordOuterClass.Record getRecord() {
      return record_ == null ? record.pb.RecordOuterClass.Record.getDefaultInstance() : record_;
    }
    /**
     * <pre>
     * Used to return a value
     * PUT_VALUE, GET_VALUE
     * </pre>
     *
     * <code>.record.pb.Record record = 3;</code>
     */
    @Override
    public record.pb.RecordOuterClass.RecordOrBuilder getRecordOrBuilder() {
      return getRecord();
    }

    public static final int CLOSERPEERS_FIELD_NUMBER = 8;
    private java.util.List<Peer> closerPeers_;
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    @Override
    public java.util.List<Peer> getCloserPeersList() {
      return closerPeers_;
    }
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    @Override
    public java.util.List<? extends PeerOrBuilder>
        getCloserPeersOrBuilderList() {
      return closerPeers_;
    }
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    @Override
    public int getCloserPeersCount() {
      return closerPeers_.size();
    }
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    @Override
    public Peer getCloserPeers(int index) {
      return closerPeers_.get(index);
    }
    /**
     * <pre>
     * Used to return peers closer to a key in a query
     * GET_VALUE, GET_PROVIDERS, FIND_NODE
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
     */
    @Override
    public PeerOrBuilder getCloserPeersOrBuilder(
        int index) {
      return closerPeers_.get(index);
    }

    public static final int PROVIDERPEERS_FIELD_NUMBER = 9;
    private java.util.List<Peer> providerPeers_;
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    @Override
    public java.util.List<Peer> getProviderPeersList() {
      return providerPeers_;
    }
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    @Override
    public java.util.List<? extends PeerOrBuilder>
        getProviderPeersOrBuilderList() {
      return providerPeers_;
    }
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    @Override
    public int getProviderPeersCount() {
      return providerPeers_.size();
    }
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    @Override
    public Peer getProviderPeers(int index) {
      return providerPeers_.get(index);
    }
    /**
     * <pre>
     * Used to return Providers
     * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
     * </pre>
     *
     * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
     */
    @Override
    public PeerOrBuilder getProviderPeersOrBuilder(
        int index) {
      return providerPeers_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != MessageType.PUT_VALUE.getNumber()) {
        output.writeEnum(1, type_);
      }
      if (!key_.isEmpty()) {
        output.writeBytes(2, key_);
      }
      if (record_ != null) {
        output.writeMessage(3, getRecord());
      }
      for (int i = 0; i < closerPeers_.size(); i++) {
        output.writeMessage(8, closerPeers_.get(i));
      }
      for (int i = 0; i < providerPeers_.size(); i++) {
        output.writeMessage(9, providerPeers_.get(i));
      }
      if (clusterLevelRaw_ != 0) {
        output.writeInt32(10, clusterLevelRaw_);
      }
      unknownFields.writeTo(output);
    }

    @Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != MessageType.PUT_VALUE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_);
      }
      if (!key_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, key_);
      }
      if (record_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getRecord());
      }
      for (int i = 0; i < closerPeers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, closerPeers_.get(i));
      }
      for (int i = 0; i < providerPeers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, providerPeers_.get(i));
      }
      if (clusterLevelRaw_ != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, clusterLevelRaw_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @Override
    public boolean equals(final Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof Message)) {
        return super.equals(obj);
      }
      Message other = (Message) obj;

      if (type_ != other.type_) return false;
      if (getClusterLevelRaw()
          != other.getClusterLevelRaw()) return false;
      if (!getKey()
          .equals(other.getKey())) return false;
      if (hasRecord() != other.hasRecord()) return false;
      if (hasRecord()) {
        if (!getRecord()
            .equals(other.getRecord())) return false;
      }
      if (!getCloserPeersList()
          .equals(other.getCloserPeersList())) return false;
      if (!getProviderPeersList()
          .equals(other.getProviderPeersList())) return false;
      if (!unknownFields.equals(other.unknownFields)) return false;
      return true;
    }

    @Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + CLUSTERLEVELRAW_FIELD_NUMBER;
      hash = (53 * hash) + getClusterLevelRaw();
      hash = (37 * hash) + KEY_FIELD_NUMBER;
      hash = (53 * hash) + getKey().hashCode();
      if (hasRecord()) {
        hash = (37 * hash) + RECORD_FIELD_NUMBER;
        hash = (53 * hash) + getRecord().hashCode();
      }
      if (getCloserPeersCount() > 0) {
        hash = (37 * hash) + CLOSERPEERS_FIELD_NUMBER;
        hash = (53 * hash) + getCloserPeersList().hashCode();
      }
      if (getProviderPeersCount() > 0) {
        hash = (37 * hash) + PROVIDERPEERS_FIELD_NUMBER;
        hash = (53 * hash) + getProviderPeersList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static Message parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Message parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Message parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Message parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Message parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static Message parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static Message parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Message parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static Message parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static Message parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static Message parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static Message parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(Message prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code dht.pb.Message}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:dht.pb.Message)
        MessageOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return Dht.internal_static_dht_pb_Message_descriptor;
      }

      @Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return Dht.internal_static_dht_pb_Message_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                Message.class, Builder.class);
      }

      // Construct using dht.pb.Dht.Message.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getCloserPeersFieldBuilder();
          getProviderPeersFieldBuilder();
        }
      }
      @Override
      public Builder clear() {
        super.clear();
        type_ = 0;

        clusterLevelRaw_ = 0;

        key_ = com.google.protobuf.ByteString.EMPTY;

        if (recordBuilder_ == null) {
          record_ = null;
        } else {
          record_ = null;
          recordBuilder_ = null;
        }
        if (closerPeersBuilder_ == null) {
          closerPeers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          closerPeersBuilder_.clear();
        }
        if (providerPeersBuilder_ == null) {
          providerPeers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          providerPeersBuilder_.clear();
        }
        return this;
      }

      @Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return Dht.internal_static_dht_pb_Message_descriptor;
      }

      @Override
      public Message getDefaultInstanceForType() {
        return Message.getDefaultInstance();
      }

      @Override
      public Message build() {
        Message result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @Override
      public Message buildPartial() {
        Message result = new Message(this);
        int from_bitField0_ = bitField0_;
        result.type_ = type_;
        result.clusterLevelRaw_ = clusterLevelRaw_;
        result.key_ = key_;
        if (recordBuilder_ == null) {
          result.record_ = record_;
        } else {
          result.record_ = recordBuilder_.build();
        }
        if (closerPeersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            closerPeers_ = java.util.Collections.unmodifiableList(closerPeers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.closerPeers_ = closerPeers_;
        } else {
          result.closerPeers_ = closerPeersBuilder_.build();
        }
        if (providerPeersBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            providerPeers_ = java.util.Collections.unmodifiableList(providerPeers_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.providerPeers_ = providerPeers_;
        } else {
          result.providerPeers_ = providerPeersBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @Override
      public Builder clone() {
        return super.clone();
      }
      @Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.setField(field, value);
      }
      @Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          Object value) {
        return super.addRepeatedField(field, value);
      }
      @Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof Message) {
          return mergeFrom((Message)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(Message other) {
        if (other == Message.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.getClusterLevelRaw() != 0) {
          setClusterLevelRaw(other.getClusterLevelRaw());
        }
        if (other.getKey() != com.google.protobuf.ByteString.EMPTY) {
          setKey(other.getKey());
        }
        if (other.hasRecord()) {
          mergeRecord(other.getRecord());
        }
        if (closerPeersBuilder_ == null) {
          if (!other.closerPeers_.isEmpty()) {
            if (closerPeers_.isEmpty()) {
              closerPeers_ = other.closerPeers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureCloserPeersIsMutable();
              closerPeers_.addAll(other.closerPeers_);
            }
            onChanged();
          }
        } else {
          if (!other.closerPeers_.isEmpty()) {
            if (closerPeersBuilder_.isEmpty()) {
              closerPeersBuilder_.dispose();
              closerPeersBuilder_ = null;
              closerPeers_ = other.closerPeers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              closerPeersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getCloserPeersFieldBuilder() : null;
            } else {
              closerPeersBuilder_.addAllMessages(other.closerPeers_);
            }
          }
        }
        if (providerPeersBuilder_ == null) {
          if (!other.providerPeers_.isEmpty()) {
            if (providerPeers_.isEmpty()) {
              providerPeers_ = other.providerPeers_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureProviderPeersIsMutable();
              providerPeers_.addAll(other.providerPeers_);
            }
            onChanged();
          }
        } else {
          if (!other.providerPeers_.isEmpty()) {
            if (providerPeersBuilder_.isEmpty()) {
              providerPeersBuilder_.dispose();
              providerPeersBuilder_ = null;
              providerPeers_ = other.providerPeers_;
              bitField0_ = (bitField0_ & ~0x00000002);
              providerPeersBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getProviderPeersFieldBuilder() : null;
            } else {
              providerPeersBuilder_.addAllMessages(other.providerPeers_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @Override
      public final boolean isInitialized() {
        return true;
      }

      @Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        Message parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (Message) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * defines what type of message it is.
       * </pre>
       *
       * <code>.dht.pb.Message.MessageType type = 1;</code>
       * @return The enum numeric value on the wire for type.
       */
      @Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * defines what type of message it is.
       * </pre>
       *
       * <code>.dht.pb.Message.MessageType type = 1;</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defines what type of message it is.
       * </pre>
       *
       * <code>.dht.pb.Message.MessageType type = 1;</code>
       * @return The type.
       */
      @Override
      public MessageType getType() {
        @SuppressWarnings("deprecation")
        MessageType result = MessageType.valueOf(type_);
        return result == null ? MessageType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * defines what type of message it is.
       * </pre>
       *
       * <code>.dht.pb.Message.MessageType type = 1;</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(MessageType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defines what type of message it is.
       * </pre>
       *
       * <code>.dht.pb.Message.MessageType type = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        
        type_ = 0;
        onChanged();
        return this;
      }

      private int clusterLevelRaw_ ;
      /**
       * <pre>
       * defines what coral cluster level this query/response belongs to.
       * in case we want to implement coral's cluster rings in the future.
       * </pre>
       *
       * <code>int32 clusterLevelRaw = 10;</code>
       * @return The clusterLevelRaw.
       */
      @Override
      public int getClusterLevelRaw() {
        return clusterLevelRaw_;
      }
      /**
       * <pre>
       * defines what coral cluster level this query/response belongs to.
       * in case we want to implement coral's cluster rings in the future.
       * </pre>
       *
       * <code>int32 clusterLevelRaw = 10;</code>
       * @param value The clusterLevelRaw to set.
       * @return This builder for chaining.
       */
      public Builder setClusterLevelRaw(int value) {
        
        clusterLevelRaw_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * defines what coral cluster level this query/response belongs to.
       * in case we want to implement coral's cluster rings in the future.
       * </pre>
       *
       * <code>int32 clusterLevelRaw = 10;</code>
       * @return This builder for chaining.
       */
      public Builder clearClusterLevelRaw() {
        
        clusterLevelRaw_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString key_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Used to specify the key associated with this message.
       * PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>bytes key = 2;</code>
       * @return The key.
       */
      @Override
      public com.google.protobuf.ByteString getKey() {
        return key_;
      }
      /**
       * <pre>
       * Used to specify the key associated with this message.
       * PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>bytes key = 2;</code>
       * @param value The key to set.
       * @return This builder for chaining.
       */
      public Builder setKey(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  
        key_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Used to specify the key associated with this message.
       * PUT_VALUE, GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>bytes key = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearKey() {
        
        key_ = getDefaultInstance().getKey();
        onChanged();
        return this;
      }

      private record.pb.RecordOuterClass.Record record_;
      private com.google.protobuf.SingleFieldBuilderV3<
          record.pb.RecordOuterClass.Record, record.pb.RecordOuterClass.Record.Builder, record.pb.RecordOuterClass.RecordOrBuilder> recordBuilder_;
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       * @return Whether the record field is set.
       */
      public boolean hasRecord() {
        return recordBuilder_ != null || record_ != null;
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       * @return The record.
       */
      public record.pb.RecordOuterClass.Record getRecord() {
        if (recordBuilder_ == null) {
          return record_ == null ? record.pb.RecordOuterClass.Record.getDefaultInstance() : record_;
        } else {
          return recordBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       */
      public Builder setRecord(record.pb.RecordOuterClass.Record value) {
        if (recordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          record_ = value;
          onChanged();
        } else {
          recordBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       */
      public Builder setRecord(
          record.pb.RecordOuterClass.Record.Builder builderForValue) {
        if (recordBuilder_ == null) {
          record_ = builderForValue.build();
          onChanged();
        } else {
          recordBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       */
      public Builder mergeRecord(record.pb.RecordOuterClass.Record value) {
        if (recordBuilder_ == null) {
          if (record_ != null) {
            record_ =
              record.pb.RecordOuterClass.Record.newBuilder(record_).mergeFrom(value).buildPartial();
          } else {
            record_ = value;
          }
          onChanged();
        } else {
          recordBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       */
      public Builder clearRecord() {
        if (recordBuilder_ == null) {
          record_ = null;
          onChanged();
        } else {
          record_ = null;
          recordBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       */
      public record.pb.RecordOuterClass.Record.Builder getRecordBuilder() {
        
        onChanged();
        return getRecordFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       */
      public record.pb.RecordOuterClass.RecordOrBuilder getRecordOrBuilder() {
        if (recordBuilder_ != null) {
          return recordBuilder_.getMessageOrBuilder();
        } else {
          return record_ == null ?
              record.pb.RecordOuterClass.Record.getDefaultInstance() : record_;
        }
      }
      /**
       * <pre>
       * Used to return a value
       * PUT_VALUE, GET_VALUE
       * </pre>
       *
       * <code>.record.pb.Record record = 3;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          record.pb.RecordOuterClass.Record, record.pb.RecordOuterClass.Record.Builder, record.pb.RecordOuterClass.RecordOrBuilder> 
          getRecordFieldBuilder() {
        if (recordBuilder_ == null) {
          recordBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              record.pb.RecordOuterClass.Record, record.pb.RecordOuterClass.Record.Builder, record.pb.RecordOuterClass.RecordOrBuilder>(
                  getRecord(),
                  getParentForChildren(),
                  isClean());
          record_ = null;
        }
        return recordBuilder_;
      }

      private java.util.List<Peer> closerPeers_ =
        java.util.Collections.emptyList();
      private void ensureCloserPeersIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          closerPeers_ = new java.util.ArrayList<Peer>(closerPeers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Peer, Peer.Builder, PeerOrBuilder> closerPeersBuilder_;

      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public java.util.List<Peer> getCloserPeersList() {
        if (closerPeersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(closerPeers_);
        } else {
          return closerPeersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public int getCloserPeersCount() {
        if (closerPeersBuilder_ == null) {
          return closerPeers_.size();
        } else {
          return closerPeersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Peer getCloserPeers(int index) {
        if (closerPeersBuilder_ == null) {
          return closerPeers_.get(index);
        } else {
          return closerPeersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder setCloserPeers(
          int index, Peer value) {
        if (closerPeersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCloserPeersIsMutable();
          closerPeers_.set(index, value);
          onChanged();
        } else {
          closerPeersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder setCloserPeers(
          int index, Peer.Builder builderForValue) {
        if (closerPeersBuilder_ == null) {
          ensureCloserPeersIsMutable();
          closerPeers_.set(index, builderForValue.build());
          onChanged();
        } else {
          closerPeersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder addCloserPeers(Peer value) {
        if (closerPeersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCloserPeersIsMutable();
          closerPeers_.add(value);
          onChanged();
        } else {
          closerPeersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder addCloserPeers(
          int index, Peer value) {
        if (closerPeersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCloserPeersIsMutable();
          closerPeers_.add(index, value);
          onChanged();
        } else {
          closerPeersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder addCloserPeers(
          Peer.Builder builderForValue) {
        if (closerPeersBuilder_ == null) {
          ensureCloserPeersIsMutable();
          closerPeers_.add(builderForValue.build());
          onChanged();
        } else {
          closerPeersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder addCloserPeers(
          int index, Peer.Builder builderForValue) {
        if (closerPeersBuilder_ == null) {
          ensureCloserPeersIsMutable();
          closerPeers_.add(index, builderForValue.build());
          onChanged();
        } else {
          closerPeersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder addAllCloserPeers(
          Iterable<? extends Peer> values) {
        if (closerPeersBuilder_ == null) {
          ensureCloserPeersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, closerPeers_);
          onChanged();
        } else {
          closerPeersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder clearCloserPeers() {
        if (closerPeersBuilder_ == null) {
          closerPeers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          closerPeersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Builder removeCloserPeers(int index) {
        if (closerPeersBuilder_ == null) {
          ensureCloserPeersIsMutable();
          closerPeers_.remove(index);
          onChanged();
        } else {
          closerPeersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Peer.Builder getCloserPeersBuilder(
          int index) {
        return getCloserPeersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public PeerOrBuilder getCloserPeersOrBuilder(
          int index) {
        if (closerPeersBuilder_ == null) {
          return closerPeers_.get(index);  } else {
          return closerPeersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public java.util.List<? extends PeerOrBuilder>
           getCloserPeersOrBuilderList() {
        if (closerPeersBuilder_ != null) {
          return closerPeersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(closerPeers_);
        }
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Peer.Builder addCloserPeersBuilder() {
        return getCloserPeersFieldBuilder().addBuilder(
            Peer.getDefaultInstance());
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public Peer.Builder addCloserPeersBuilder(
          int index) {
        return getCloserPeersFieldBuilder().addBuilder(
            index, Peer.getDefaultInstance());
      }
      /**
       * <pre>
       * Used to return peers closer to a key in a query
       * GET_VALUE, GET_PROVIDERS, FIND_NODE
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer closerPeers = 8;</code>
       */
      public java.util.List<Peer.Builder>
           getCloserPeersBuilderList() {
        return getCloserPeersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Peer, Peer.Builder, PeerOrBuilder>
          getCloserPeersFieldBuilder() {
        if (closerPeersBuilder_ == null) {
          closerPeersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Peer, Peer.Builder, PeerOrBuilder>(
                  closerPeers_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          closerPeers_ = null;
        }
        return closerPeersBuilder_;
      }

      private java.util.List<Peer> providerPeers_ =
        java.util.Collections.emptyList();
      private void ensureProviderPeersIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          providerPeers_ = new java.util.ArrayList<Peer>(providerPeers_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          Peer, Peer.Builder, PeerOrBuilder> providerPeersBuilder_;

      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public java.util.List<Peer> getProviderPeersList() {
        if (providerPeersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(providerPeers_);
        } else {
          return providerPeersBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public int getProviderPeersCount() {
        if (providerPeersBuilder_ == null) {
          return providerPeers_.size();
        } else {
          return providerPeersBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Peer getProviderPeers(int index) {
        if (providerPeersBuilder_ == null) {
          return providerPeers_.get(index);
        } else {
          return providerPeersBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder setProviderPeers(
          int index, Peer value) {
        if (providerPeersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProviderPeersIsMutable();
          providerPeers_.set(index, value);
          onChanged();
        } else {
          providerPeersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder setProviderPeers(
          int index, Peer.Builder builderForValue) {
        if (providerPeersBuilder_ == null) {
          ensureProviderPeersIsMutable();
          providerPeers_.set(index, builderForValue.build());
          onChanged();
        } else {
          providerPeersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder addProviderPeers(Peer value) {
        if (providerPeersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProviderPeersIsMutable();
          providerPeers_.add(value);
          onChanged();
        } else {
          providerPeersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder addProviderPeers(
          int index, Peer value) {
        if (providerPeersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureProviderPeersIsMutable();
          providerPeers_.add(index, value);
          onChanged();
        } else {
          providerPeersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder addProviderPeers(
          Peer.Builder builderForValue) {
        if (providerPeersBuilder_ == null) {
          ensureProviderPeersIsMutable();
          providerPeers_.add(builderForValue.build());
          onChanged();
        } else {
          providerPeersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder addProviderPeers(
          int index, Peer.Builder builderForValue) {
        if (providerPeersBuilder_ == null) {
          ensureProviderPeersIsMutable();
          providerPeers_.add(index, builderForValue.build());
          onChanged();
        } else {
          providerPeersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder addAllProviderPeers(
          Iterable<? extends Peer> values) {
        if (providerPeersBuilder_ == null) {
          ensureProviderPeersIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, providerPeers_);
          onChanged();
        } else {
          providerPeersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder clearProviderPeers() {
        if (providerPeersBuilder_ == null) {
          providerPeers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          providerPeersBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Builder removeProviderPeers(int index) {
        if (providerPeersBuilder_ == null) {
          ensureProviderPeersIsMutable();
          providerPeers_.remove(index);
          onChanged();
        } else {
          providerPeersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Peer.Builder getProviderPeersBuilder(
          int index) {
        return getProviderPeersFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public PeerOrBuilder getProviderPeersOrBuilder(
          int index) {
        if (providerPeersBuilder_ == null) {
          return providerPeers_.get(index);  } else {
          return providerPeersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public java.util.List<? extends PeerOrBuilder>
           getProviderPeersOrBuilderList() {
        if (providerPeersBuilder_ != null) {
          return providerPeersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(providerPeers_);
        }
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Peer.Builder addProviderPeersBuilder() {
        return getProviderPeersFieldBuilder().addBuilder(
            Peer.getDefaultInstance());
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public Peer.Builder addProviderPeersBuilder(
          int index) {
        return getProviderPeersFieldBuilder().addBuilder(
            index, Peer.getDefaultInstance());
      }
      /**
       * <pre>
       * Used to return Providers
       * GET_VALUE, ADD_PROVIDER, GET_PROVIDERS
       * </pre>
       *
       * <code>repeated .dht.pb.Message.Peer providerPeers = 9;</code>
       */
      public java.util.List<Peer.Builder>
           getProviderPeersBuilderList() {
        return getProviderPeersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          Peer, Peer.Builder, PeerOrBuilder>
          getProviderPeersFieldBuilder() {
        if (providerPeersBuilder_ == null) {
          providerPeersBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              Peer, Peer.Builder, PeerOrBuilder>(
                  providerPeers_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          providerPeers_ = null;
        }
        return providerPeersBuilder_;
      }
      @Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:dht.pb.Message)
    }

    // @@protoc_insertion_point(class_scope:dht.pb.Message)
    private static final Message DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new Message();
    }

    public static Message getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Message>
        PARSER = new com.google.protobuf.AbstractParser<Message>() {
      @Override
      public Message parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Message(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<Message> parser() {
      return PARSER;
    }

    @Override
    public com.google.protobuf.Parser<Message> getParserForType() {
      return PARSER;
    }

    @Override
    public Message getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dht_pb_Message_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dht_pb_Message_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_dht_pb_Message_Peer_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_dht_pb_Message_Peer_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    String[] descriptorData = {
      "\n\tdht.proto\022\006dht.pb\032\014record.proto\"\360\003\n\007Me" +
      "ssage\022)\n\004type\030\001 \001(\0162\033.dht.pb.Message.Mes" +
      "sageType\022\027\n\017clusterLevelRaw\030\n \001(\005\022\013\n\003key" +
      "\030\002 \001(\014\022!\n\006record\030\003 \001(\0132\021.record.pb.Recor" +
      "d\022)\n\013closerPeers\030\010 \003(\0132\024.dht.pb.Message." +
      "Peer\022+\n\rproviderPeers\030\t \003(\0132\024.dht.pb.Mes" +
      "sage.Peer\032U\n\004Peer\022\n\n\002id\030\001 \001(\014\022\r\n\005addrs\030\002" +
      " \003(\014\0222\n\nconnection\030\003 \001(\0162\036.dht.pb.Messag" +
      "e.ConnectionType\"i\n\013MessageType\022\r\n\tPUT_V" +
      "ALUE\020\000\022\r\n\tGET_VALUE\020\001\022\020\n\014ADD_PROVIDER\020\002\022" +
      "\021\n\rGET_PROVIDERS\020\003\022\r\n\tFIND_NODE\020\004\022\010\n\004PIN" +
      "G\020\005\"W\n\016ConnectionType\022\021\n\rNOT_CONNECTED\020\000" +
      "\022\r\n\tCONNECTED\020\001\022\017\n\013CAN_CONNECT\020\002\022\022\n\016CANN" +
      "OT_CONNECT\020\003b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          record.pb.RecordOuterClass.getDescriptor(),
        });
    internal_static_dht_pb_Message_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_dht_pb_Message_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dht_pb_Message_descriptor,
        new String[] { "Type", "ClusterLevelRaw", "Key", "Record", "CloserPeers", "ProviderPeers", });
    internal_static_dht_pb_Message_Peer_descriptor =
      internal_static_dht_pb_Message_descriptor.getNestedTypes().get(0);
    internal_static_dht_pb_Message_Peer_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_dht_pb_Message_Peer_descriptor,
        new String[] { "Id", "Addrs", "Connection", });
    record.pb.RecordOuterClass.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
